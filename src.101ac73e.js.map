{"version":3,"sources":["js/ApiService.js","js/RenderService.js","js/LocalStorageService.js","index.js"],"names":["ApiService","constructor","searchQuery","page","query","newQuery","getPopularFilms","fetch","_apiKey","then","response","json","data","results","catch","error","console","getFilmsByName","getFilmDetails","id","list","document","querySelector","modal","library","RenderService","renderAllFilms","filmArray","markup","map","title","poster_path","toUpperCase","join","insertAdjacentHTML","renderFilmDetails","film","innerHTML","popularity","genres","overview","LocalStorageService","addToLibrary","obj","localStorage","getItem","JSON","parse","forEach","log","getAllFilms","parsedData","apiService","renderService","localStorageService","refs","input","getPopular","closeModal","classList","add","openModal","remove","addEventListener","e","target","dataset","action","filmElem","parentNode","textContent","path","getAttribute","setFilm","getDetails","nodeName","window"],"mappings":"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","file":"src.101ac73e.js","sourceRoot":"../src","sourcesContent":["export default class ApiService {\n\n    _apiKey = '4a69d9470951ad07e8f0cc655bb46705'\n\n    constructor() {\n        this.searchQuery = '',\n        this.page = 1\n    }\n\n    set query(newQuery) {\n        this.query = newQuery\n    }\n\n    get query() {\n        return this.searchQuery\n    }\n\n    async getPopularFilms() {\n        return await fetch(`https://api.themoviedb.org/3/trending/movie/week?api_key=${this._apiKey}`)\n            .then(response => response.json())\n            .then(data => data.results)\n            .catch(error => console.error(error))\n    }\n\n    async getFilmsByName() {\n        return await fetch(`https://api.themoviedb.org/3/search/movie?query=${this.searchQuery}&api_key=${this._apiKey}`)\n            .then(response => response.json())\n            .then(data => data.results)\n            .catch(error => console.error(error))\n    }\n\n    async getFilmDetails(id) {\n        return await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${this._apiKey}`)\n            .then(response => response.json())\n            .catch(error => console.error(error))\n    }\n\n}","const list = document.querySelector('.list')\nconst modal = document.querySelector('[data-modal]')\nconst library = document.querySelector('[data-lib]')\n\nexport default class RenderService {\n    constructor() {\n\n    }\n\n    renderAllFilms(filmArray) {\n        const markup = filmArray.map(({id, title, poster_path}) => {\n\n            const imagePath = `https://image.tmdb.org/t/p/w500/${poster_path}`\n            const upperTitle = title.toUpperCase()\n\n            return `\n                    <li class=\"list__item\" id=${id}>      \n                        <img class=\"item__img\" src=${imagePath} alt=\"poster\"> \n                        \n                        <p class=\"item__title\">${upperTitle}</p>\n                        <p class=\"item__genre\">Drama, Action | 2020</p>\n                    </li>\n                `\n        }).join('')\n\n        list.insertAdjacentHTML('afterbegin', markup)\n    }\n\n    renderFilmDetails(film) {\n        modal.innerHTML = ''\n\n        const {id, poster_path, title, popularity, genres, overview} = film\n        const imagePath = `https://image.tmdb.org/t/p/w400/${poster_path}`\n        \n        const markup = `\n            <div class=\"film-details\">\n\n                <div class=\"img-thumb\" id=${id}>\n                    <img src=${imagePath} alt=\"poster\" width=\"396\">\n                </div>\n\n                <div class=\"about\">\n                    <label class=\"about__label\">\n                        Просмотров: \n                        <p class=\"about__field popularity\">${popularity}</p>\n                    </label>\n\n                    <label class=\"about__label\">\n                        Фильм: \n                        <p class=\"about__field title\">${title}</p>\n                    </label>\n                    \n                    <label class=\"about__label\">\n                        Жанр: \n                        <p class=\"about__field genres\">${genres[0]}</p>\n                    </label>\n\n                    <label class=\"about__label\">\n                        О чём: \n                        <p class=\"about__field overview\">${overview}</p>\n                    </label>\n\n                    <div class=\"btn-block\">\n                        <button class=\"add-to-lib-btn\" data-action=\"addToLib\">add to library</button>\n                        <button class=\"add-to-que-btn\" data-action=\"addToQue\">add to queue</button>\n                    </div>\n\n                </div>\n\n                <button class=\"close-btn\" data-action=\"close\">x</button>\n\n                \n            \n            </div>\n        `\n\n        modal.insertAdjacentHTML('afterbegin', markup)\n    }\n\n}","export default class LocalStorageService {\n    constructor() {\n      this.filmArray = []\n    }\n\n    addToLibrary(obj) {\n        const data = localStorage.getItem('myFilms')\n        const filmArray = JSON.parse(data)\n\n        if (filmArray) {\n            filmArray.forEach(film => {\n                console.log(film.id)\n            })\n        }\n\n        // this.filmsArr = [...this.filmsArr, JSON.stringify(film)]\n        // localStorage.setItem('myArr', this.filmsArr)\n    }\n\n    getAllFilms() {\n        const data = localStorage.getItem('myFilms')\n        const parsedData = JSON.parse(data)\n        return parsedData\n    }\n\n    \n\n\n}","import './sass/main.scss';\nimport ApiService from './js/ApiService';\nimport RenderService from './js/RenderService';\nimport LocalStorageService from './js/LocalStorageService';\n\nconst apiService = new ApiService()\nconst renderService = new RenderService()\nconst localStorageService = new LocalStorageService()\n\nconst refs = {\n    input: document.querySelector('.search-block__input'),\n    list: document.querySelector('.list'),\n    modal: document.querySelector('[data-modal]'),\n}\n\nconst getPopular = () => {\n    apiService.getPopularFilms().then(renderService.renderAllFilms)\n}\n\nconst closeModal = () => {\n    refs.modal.classList.add('hidden')\n}\n\nconst openModal = (id) => {\n    \n    refs.modal.classList.remove('hidden')\n    apiService.getFilmDetails(id).then(renderService.renderFilmDetails)\n\n    refs.modal.addEventListener('click', e => {\n        if (e.target.dataset.action === 'close') {\n            closeModal()\n        }\n\n        if (e.target.dataset.action === 'saveToLibrary') {\n           const filmElem = e.target.parentNode\n           \n            const obj = {\n                id: filmElem.id,\n                title: filmElem.querySelector('.title').textContent,\n                overview: filmElem.querySelector('.overview').textContent,\n                path: filmElem.querySelector('.path').getAttribute('src')\n            }\n           \n\n           localStorageService.setFilm(obj)\n        }\n   })\n}  \n\n\nconst getDetails = (e) => {\n\n    if (e.target.nodeName === 'IMG') {\n            const { id } = e.target.parentNode\n            openModal(id)\n        }\n    }\n\nwindow.addEventListener('load', getPopular)\nrefs.list.addEventListener('click', getDetails)"]}