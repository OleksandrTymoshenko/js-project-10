{"version":3,"sources":["js/ApiService.js","js/RenderService.js","js/LocalStorageService.js","index.js"],"names":["ApiService","constructor","searchQuery","page","query","newQuery","getPopularFilms","fetch","_apiKey","then","response","json","data","results","catch","error","console","getFilmsByName","getFilmDetails","id","list","document","querySelector","modal","library","generes","name","generesForRender","a","generesArray","map","element","push","find","gener","splice","join","RenderService","obj","renderAllFilms","filmArray","markup","title","poster_path","genre_ids","toUpperCase","insertAdjacentHTML","renderFilmDetails","film","innerHTML","popularity","genres","overview","vote_average","vote_count","imagePath","upperTitle","LocalStorageService","filmsArray","addToLibrary","stringified","JSON","stringify","localStorage","setItem","getAllFilms","getItem","parsedData","parse","apiService","renderService","localStorageService","refs","input","naviListMain","naviListLib","headerMain","headerLib","onNaviListClick","e","target","textContent","style","display","addEventListener","getPopular","closeModal","classList","add","openModal","remove","dataset","action","filmElem","innerText","path","getAttribute","getDetails","nodeName","parentNode","window"],"mappings":"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","file":"src.e3c04a88.js","sourceRoot":"../src","sourcesContent":["export default class ApiService {\n\n    _apiKey = '4a69d9470951ad07e8f0cc655bb46705'\n\n    constructor() {\n        this.searchQuery = '',\n        this.page = 1\n    }\n\n    set query(newQuery) {\n        this.query = newQuery\n    }\n\n    get query() {\n        return this.searchQuery\n    }\n\n    async getPopularFilms() {\n        return await fetch(`https://api.themoviedb.org/3/trending/movie/week?api_key=${this._apiKey}`)\n            .then(response => response.json())\n            .then(data => data.results)\n            .catch(error => console.error(error))\n    }\n\n    async getFilmsByName() {\n        return await fetch(`https://api.themoviedb.org/3/search/movie?query=${this.searchQuery}&api_key=${this._apiKey}`)\n            .then(response => response.json())\n            .then(data => data.results)\n            .catch(error => console.error(error))\n    }\n\n    async getFilmDetails(id) {\n        return await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${this._apiKey}`)\n            .then(response => response.json())\n            .catch(error => console.error(error))\n    }\n\n}","const list = document.querySelector('.list')\nconst modal = document.querySelector('[data-modal]')\nconst library = document.querySelector('[data-lib]')\n\nconst generes = [\n    {id: 28, name: \"Action\"},\n{id: 12, name: \"Adventure\"},\n{id: 16, name: \"Animation\"},\n{id: 35, name: \"Comedy\"},\n{id: 80, name: \"Crime\"},\n{id: 99, name: \"Documentary\"},\n{id: 18, name: \"Drama\"},\n{id: 10751, name: \"Family\"},\n{id: 14, name: \"Fantasy\"},\n{id: 36, name: \"History\"},\n{id: 27, name: \"Horror\"},\n{id: 10402, name: \"Music\"},\n{id: 9648, name: \"Mystery\"},\n{id: 10749, name: \"Romance\"},\n{id: 878, name: \"Science Fiction\"},\n{id: 10770, name: \"TV Movie\"},\n{id: 53, name: \"Thriller\"},\n{id: 10752, name: \"War\"},\n{id: 37, name: \"Western\"},\n]\n\n\nfunction generesForRender (a) {\n    let generesArray = [];\n    a.map((element) => generesArray.push(generes.find(gener => gener.id === element).name))\n    return generesArray.splice(0, 2).join(\", \")\n}\n\nexport default class RenderService {\n    constructor() {\n        this.obj = {}\n    }\n\n    renderAllFilms(filmArray) {\n        const markup = filmArray.map(({id, title, poster_path, genre_ids}) => {\n\n            const imagePath = `https://image.tmdb.org/t/p/w500/${poster_path}`\n            const upperTitle = title.toUpperCase();\n            const generesFilmArray = generesForRender(genre_ids);\n\n            return `\n                    <li class=\"list__item\" id=${id}> \n                        <img class=\"item__img\" src=${imagePath} alt=\"poster\"> \n                        \n                        <p class=\"item__title\">${upperTitle}</p>\n                        <p class=\"item__genre\">${generesFilmArray} | 2020</p>\n                    </li>\n                `\n        }).join('')\n\n        list.insertAdjacentHTML('afterbegin', markup)\n    }\n\n    renderFilmDetails(film) {\n        modal.innerHTML = ''\n\n        const {id, poster_path, title, popularity, genres, overview, vote_average, vote_count} = film\n        const imagePath = `https://image.tmdb.org/t/p/w400/${poster_path}`\n        const upperTitle = title.toUpperCase()\n        \n        const markup = `\n            <div class=\"film-details\" id=${id}>\n\n                <div class=\"img-thumb\" id=${id}>\n                    <img class=\"film-details__path\" src=${imagePath} alt=\"poster\" width=\"396\">\n                </div>\n\n                <div class=\"about\">\n                    <p class=\"about__title\">${upperTitle}</p>\n\n                    <div class=\"details\">\n                        <div class=\"details__names-col\">\n                            <p class=\"details__value\">Vote / Votes<p>\n                            <p class=\"details__value\">Popularity<p>\n                            <p class=\"details__value\">Original Title<p>\n                            <p class=\"details__value\">Genre<p>\n                        </div>\n                        \n                        <div class=\"values-col\">\n                            <p class=\"details__name\"><span class=\"vote\">${vote_average}</span> / ${vote_count}<p>\n                            <p class=\"details__name popularity\">${popularity}<p>\n                            <p class=\"details__name\">${upperTitle}<p>\n                            <p class=\"details__name\">Western<p>\n                        </div>\n                    </div>\n\n                    <div class=\"about__description\">\n                        <p class=\"about__description--title\" >ABOUT</p>\n\n                        <p class=\"about__description--text\">${overview}</p>\n                    </div>\n\n                    <div class=\"btn-block\">\n                        <button class=\"about__btn lib\" data-action=\"addToLib\">add to watched</button>\n                        <button class=\"about__btn queue\" data-action=\"addToQue\">add to queue</button>\n                    </div>\n\n                </div>\n\n            <button class=\"close-btn\" data-action=\"close\">x</button>\n                \n            </div>\n        `\n\n        modal.insertAdjacentHTML('afterbegin', markup)\n    }\n\n}","export default class LocalStorageService {\n    constructor() {\n      this.filmsArray = []\n    }\n\n    addToLibrary(obj) {\n        // const data = localStorage.getItem('myFilms')\n        // const filmArray = JSON.parse(data)\n\n        // if (filmArray) {\n        //     filmArray.forEach(film => {\n        //         console.log(film.id)\n        //     })\n        // }\n\n        this.filmsArray.push(obj)\n        const stringified = JSON.stringify(this.filmsArray)\n        localStorage.setItem('myArr', stringified)\n    }\n\n    getAllFilms() {\n        const data = localStorage.getItem('myArr')\n        const parsedData = JSON.parse(data)\n        return parsedData\n    }\n\n    \n\n\n}","import './sass/main.scss';\nimport ApiService from './js/ApiService';\nimport RenderService from './js/RenderService';\nimport LocalStorageService from './js/LocalStorageService';\n\nconst apiService = new ApiService()\nconst renderService = new RenderService()\nconst localStorageService = new LocalStorageService()\n\nconst refs = {\n    input: document.querySelector('.search-block__input'),\n    list: document.querySelector('.list'),\n    modal: document.querySelector('[data-modal]'),\n    naviListMain: document.querySelector('.navi__list[data-action=\"main\"]'),\n    naviListLib: document.querySelector('.navi__list[data-action=\"library\"]'),\n    headerMain: document.querySelector('header[data-action=\"main\"]'),\n    headerLib: document.querySelector('header[data-action=\"library\"]'),    \n}\n\nrefs.headerLib.style.display = \"none\";\n\nfunction onNaviListClick(e) {\n    if(e.target.textContent === 'Home'){\n        refs.headerMain.style.display = \"block\";\n        refs.headerLib.style.display = \"none\";\n    }\n    if(e.target.textContent === 'My library'){\n        refs.headerMain.style.display = \"none\";\n        refs.headerLib.style.display = \"block\";\n    }\n}\n\nrefs.naviListMain.addEventListener('click', onNaviListClick) \nrefs.naviListLib.addEventListener('click', onNaviListClick) \n\nconst getPopular = () => {\n    apiService.getPopularFilms().then(renderService.renderAllFilms)\n}\n\nconst closeModal = () => {\n    refs.modal.classList.add('hidden')\n}\n\nconst openModal = (id) => {\n    \n    refs.modal.classList.remove('hidden')\n    apiService.getFilmDetails(id).then(renderService.renderFilmDetails)\n\n    refs.modal.addEventListener('click', e => {\n        if (e.target.dataset.action === 'close') {\n            closeModal()\n        }\n\n        if (e.target.dataset.action === 'addToLib') {\n           const filmElem = document.querySelector('.film-details')\n           \n            const obj = {\n                id: filmElem.id,\n                title: filmElem.querySelector('.about__title').innerText,\n                overview: filmElem.querySelector('.about__description--text').innerText,\n                path: filmElem.querySelector('.film-details__path').getAttribute('src'),\n                popularity: filmElem.querySelector('.popularity').innerText,\n            }\n           \n\n           localStorageService.addToLibrary(obj)\n        }\n   })\n}  \n\n\nconst getDetails = (e) => {\n\n    if (e.target.nodeName === 'IMG') {\n            const { id } = e.target.parentNode\n            openModal(id)\n        }\n}\n\nwindow.addEventListener('load', getPopular)\nrefs.list.addEventListener('click', getDetails)"]}