{"version":3,"sources":["js/auth-modal.js","js/ApiService.js","js/RenderService.js","js/LocalStorageService.js","index.js"],"names":["refs","openModalBtn","document","querySelector","closeModalBtn","querySelectorAll","modal","openSignInFormBtn","openRegFormBtn","signInForm","regForm","toggleModal","e","preventDefault","classList","toggle","openSignInForm","remove","add","openRegForm","onBackDropClick","currentTarget","target","addEventListener","forEach","el","ApiService","constructor","searchQuery","page","query","newQuery","getPopularFilms","fetch","_apiKey","then","response","json","data","results","catch","error","console","getFilmsByName","getFilmDetails","id","list","library","generes","name","generesForRender","a","generesArray","map","element","push","find","gener","splice","join","RenderService","obj","renderAllFilms","filmArray","markup","title","poster_path","genre_ids","toUpperCase","insertAdjacentHTML","renderFilmDetails","film","innerHTML","popularity","genres","overview","vote_average","vote_count","imagePath","upperTitle","LocalStorageService","filmsArray","addToLibrary","stringified","JSON","stringify","localStorage","setItem","getAllFilms","getItem","parsedData","parse","apiService","renderService","localStorageService","input","naviListMain","naviListLib","headerMain","headerLib","onNaviListClick","textContent","style","display","getPopular","closeModal","openModal","dataset","action","filmElem","innerText","path","getAttribute","getDetails","nodeName","parentNode","findFilm","value","window"],"mappings":"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","file":"src.01b3a982.js","sourceRoot":"../src","sourcesContent":["const refs = {\n  openModalBtn: document.querySelector('[data-auth-modal-open]'),\n  closeModalBtn: document.querySelectorAll('[data-auth-modal-close]'),\n  modal: document.querySelector('[data-auth-modal]'),\n  openSignInFormBtn: document.querySelector('[data-auth-modal-signin]'),\n  openRegFormBtn: document.querySelector('[data-auth-modal-reg]'),\n  signInForm: document.querySelector('[data-auth-modal-signin-form]'),\n  regForm: document.querySelector('[data-auth-modal-reg-form]'),\n};\n  \n\nrefs.openModalBtn.addEventListener('click', toggleModal);\nrefs.closeModalBtn.forEach(el => el.addEventListener('click', toggleModal));\nrefs.openSignInFormBtn.addEventListener('click', openSignInForm);\nrefs.openRegFormBtn.addEventListener('click', openRegForm);\nrefs.modal.addEventListener('click', onBackDropClick);\n\n\nfunction toggleModal(e) {\n  e.preventDefault();\n  refs.modal.classList.toggle('visually-hidden');\n}\n\n\nfunction openSignInForm() {\n  refs.signInForm.classList.remove('hide');\n  refs.regForm.classList.add('hide');\n  refs.openSignInFormBtn.classList.add('active');\n  refs.openRegFormBtn.classList.remove('active');\n}\n\nfunction openRegForm() {\n  refs.regForm.classList.remove('hide');\n  refs.signInForm.classList.add('hide');    \n  refs.openSignInFormBtn.classList.remove('active');\n  refs.openRegFormBtn.classList.add('active');\n}\n\nfunction onBackDropClick(e) {\n  if (e.currentTarget === e.target) {\n    toggleModal();\n  }\n}\n","export default class ApiService {\n\n    _apiKey = '4a69d9470951ad07e8f0cc655bb46705'\n\n    constructor() {\n        this.searchQuery = '',\n        this.page = 1\n    }\n\n    set query(newQuery) {\n        this.searchQuery = newQuery\n    }\n\n    get query() {\n        return this.searchQuery\n    }\n\n    async getPopularFilms() {\n        return await fetch(`https://api.themoviedb.org/3/trending/movie/week?api_key=${this._apiKey}`)\n            .then(response => response.json())\n            .then(data => data.results)\n            .catch(error => console.error(error))\n    }\n\n    async getFilmsByName() {\n        return await fetch(`https://api.themoviedb.org/3/search/movie?query=${this.searchQuery}&api_key=${this._apiKey}`)\n            .then(response => response.json())\n            .then(data => data.results)\n            .catch(error => console.error(error))\n    }\n\n    async getFilmDetails(id) {\n        return await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${this._apiKey}`)\n            .then(response => response.json())\n            .catch(error => console.error(error))\n    }\n\n}","const list = document.querySelector('.list')\nconst modal = document.querySelector('[data-modal]')\nconst library = document.querySelector('[data-lib]')\n\nconst generes = [\n    {id: 28, name: \"Action\"},\n{id: 12, name: \"Adventure\"},\n{id: 16, name: \"Animation\"},\n{id: 35, name: \"Comedy\"},\n{id: 80, name: \"Crime\"},\n{id: 99, name: \"Documentary\"},\n{id: 18, name: \"Drama\"},\n{id: 10751, name: \"Family\"},\n{id: 14, name: \"Fantasy\"},\n{id: 36, name: \"History\"},\n{id: 27, name: \"Horror\"},\n{id: 10402, name: \"Music\"},\n{id: 9648, name: \"Mystery\"},\n{id: 10749, name: \"Romance\"},\n{id: 878, name: \"Science Fiction\"},\n{id: 10770, name: \"TV Movie\"},\n{id: 53, name: \"Thriller\"},\n{id: 10752, name: \"War\"},\n{id: 37, name: \"Western\"},\n]\n\n\nfunction generesForRender (a) {\n    let generesArray = [];\n    a.map((element) => generesArray.push(generes.find(gener => gener.id === element).name))\n    return generesArray.splice(0, 2).join(\", \")\n}\n\nexport default class RenderService {\n    constructor() {\n        this.obj = {}\n    }\n\n    renderAllFilms(filmArray) {\n        const markup = filmArray.map(({id, title, poster_path, genre_ids}) => {\n\n            const imagePath = `https://image.tmdb.org/t/p/w500/${poster_path}`\n            const upperTitle = title.toUpperCase();\n            const generesFilmArray = generesForRender(genre_ids);\n\n            return `\n                    <li class=\"list__item\" id=${id}> \n                        <img class=\"item__img\" src=${imagePath} alt=\"poster\"> \n                        \n                        <p class=\"item__title\">${upperTitle}</p>\n                        <p class=\"item__genre\">${generesFilmArray} | 2020</p>\n                    </li>\n                `\n        }).join('')\n\n        list.insertAdjacentHTML('afterbegin', markup)\n    }\n\n    renderFilmDetails(film) {\n        modal.innerHTML = ''\n\n        const {id, poster_path, title, popularity, genres, overview, vote_average, vote_count} = film\n        const imagePath = `https://image.tmdb.org/t/p/w400/${poster_path}`\n        const upperTitle = title.toUpperCase()\n        \n        const markup = `\n            <div class=\"film-details\" id=${id}>\n\n                <div class=\"img-thumb\" id=${id}>\n                    <img class=\"film-details__path\" src=${imagePath} alt=\"poster\" width=\"396\">\n                </div>\n\n                <div class=\"about\">\n                    <p class=\"about__title\">${upperTitle}</p>\n\n                    <div class=\"details\">\n                        <div class=\"details__names-col\">\n                            <p class=\"details__value\">Vote / Votes<p>\n                            <p class=\"details__value\">Popularity<p>\n                            <p class=\"details__value\">Original Title<p>\n                            <p class=\"details__value\">Genre<p>\n                        </div>\n                        \n                        <div class=\"values-col\">\n                            <p class=\"details__name\"><span class=\"vote\">${vote_average}</span> / ${vote_count}<p>\n                            <p class=\"details__name popularity\">${popularity}<p>\n                            <p class=\"details__name\">${upperTitle}<p>\n                            <p class=\"details__name\">Western<p>\n                        </div>\n                    </div>\n\n                    <div class=\"about__description\">\n                        <p class=\"about__description--title\" >ABOUT</p>\n\n                        <p class=\"about__description--text\">${overview}</p>\n                    </div>\n\n                    <div class=\"btn-block\">\n                        <button class=\"about__btn lib\" data-action=\"addToLib\">add to watched</button>\n                        <button class=\"about__btn queue\" data-action=\"addToQue\">add to queue</button>\n                    </div>\n\n                </div>\n\n            <button class=\"close-btn\" data-action=\"close\"></button>\n                \n            </div>\n        `\n\n        modal.insertAdjacentHTML('afterbegin', markup)\n    }\n\n}","export default class LocalStorageService {\n    constructor() {\n      this.filmsArray = []\n    }\n\n    addToLibrary(obj) {\n        // const data = localStorage.getItem('myFilms')\n        // const filmArray = JSON.parse(data)\n\n        // if (filmArray) {\n        //     filmArray.forEach(film => {\n        //         console.log(film.id)\n        //     })\n        // }\n\n        this.filmsArray.push(obj)\n        const stringified = JSON.stringify(this.filmsArray)\n        localStorage.setItem('myArr', stringified)\n    }\n\n    getAllFilms() {\n        const data = localStorage.getItem('myArr')\n        const parsedData = JSON.parse(data)\n        return parsedData\n    }\n\n    \n\n\n}","import './sass/main.scss';\nimport './js/auth-modal.js';\nimport ApiService from './js/ApiService';\nimport RenderService from './js/RenderService';\nimport LocalStorageService from './js/LocalStorageService';\n\nconst apiService = new ApiService()\nconst renderService = new RenderService()\nconst localStorageService = new LocalStorageService()\n\nconst refs = {\n    input: document.querySelector('.input'),\n    list: document.querySelector('.list'),\n    modal: document.querySelector('[data-modal]'),\n    naviListMain: document.querySelector('.navi__list[data-action=\"main\"]'),\n    naviListLib: document.querySelector('.navi__list[data-action=\"library\"]'),\n    headerMain: document.querySelector('header[data-action=\"main\"]'),\n    headerLib: document.querySelector('header[data-action=\"library\"]'),    \n}\n\nrefs.headerLib.style.display = \"none\";\n\nfunction onNaviListClick(e) {\n    if(e.target.textContent === 'Home'){\n        refs.headerMain.style.display = \"block\";\n        refs.headerLib.style.display = \"none\";\n    }\n    if(e.target.textContent === 'My library'){\n        refs.headerMain.style.display = \"none\";\n        refs.headerLib.style.display = \"block\";\n    }\n}\n\nrefs.naviListMain.addEventListener('click', onNaviListClick) \nrefs.naviListLib.addEventListener('click', onNaviListClick) \n\nconst getPopular = () => {\n    apiService.getPopularFilms().then(renderService.renderAllFilms)\n}\n\nconst closeModal = () => {\n    refs.modal.classList.add('hidden')\n}\n\nconst openModal = (id) => {\n    \n    refs.modal.classList.remove('hidden')\n\n    apiService.getFilmDetails(id).then(renderService.renderFilmDetails)\n\n    refs.modal.addEventListener('click', e => {\n        if (e.target.dataset.action === 'close') {\n            closeModal()\n        }\n\n        if (e.target.dataset.action === 'addToLib') {\n           const filmElem = document.querySelector('.film-details')\n           \n            const obj = {\n                id: filmElem.id,\n                title: filmElem.querySelector('.about__title').innerText,\n                overview: filmElem.querySelector('.about__description--text').innerText,\n                path: filmElem.querySelector('.film-details__path').getAttribute('src'),\n                popularity: filmElem.querySelector('.popularity').innerText,\n            }\n           \n\n           localStorageService.addToLibrary(obj)\n        }\n   })\n}  \n\nconst getDetails = (e) => {\n\n    if (e.target.nodeName === 'IMG') {\n            const { id } = e.target.parentNode\n            openModal(id)\n        }\n}\n\nconst findFilm = (e) => {\n    apiService.query = e.currentTarget.value\n    apiService.getFilmsByName().then(renderService.renderAllFilms)\n}\n\nwindow.addEventListener('load', getPopular)\nrefs.list.addEventListener('click', getDetails)\nrefs.input.addEventListener('blur', findFilm)"]}